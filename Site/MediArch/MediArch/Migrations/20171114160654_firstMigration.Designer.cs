// <auto-generated />
using MediArch.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace MediArch.Migrations
{
    [DbContext(typeof(DataService))]
    [Migration("20171114160654_firstMigration")]
    partial class firstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MediArch.Data.Consult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConsultResult");

                    b.Property<Guid>("DoctorId");

                    b.Property<Guid>("PacientId");

                    b.Property<Guid?>("PersonId");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Consult");
                });

            modelBuilder.Entity("MediArch.Data.Medicine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ConsultId");

                    b.Property<string>("Indications");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ConsultId");

                    b.ToTable("Medicine");
                });

            modelBuilder.Entity("MediArch.Data.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<long>("CNP");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("PhoneNumber")
                        .IsRequired();

                    b.Property<int>("UserType");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("MediArch.Data.Consult", b =>
                {
                    b.HasOne("MediArch.Data.Person")
                        .WithMany("Consults")
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("MediArch.Data.Medicine", b =>
                {
                    b.HasOne("MediArch.Data.Consult")
                        .WithMany("MedicineList")
                        .HasForeignKey("ConsultId");
                });
#pragma warning restore 612, 618
        }
    }
}

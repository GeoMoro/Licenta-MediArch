@using System.Web.UI.WebControls
@model MediArch.Models.Person

@{
    ViewBag.Title = "Register";
}

<h2 style="text-align: center">Register</h2>
<h3 style="text-align: center"> Create a new account. </h3>


    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        @*<center>*@
        <div class="form-horizontal" style=" display:block;">
            <form action="" method='post'>

               
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CNP, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CNP, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CNP, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <br>
                    <div class="col-md-10">
                        <p> Day: </p>
                        @Html.EditorFor(model => model.BirthDateDay, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BirthDateDay, "", new { @class = "text-danger" })
                        <p> Month: </p>
                        @Html.EditorFor(model => model.BirthDateMonth, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BirthDateMonth, "", new { @class = "text-danger" })
                        <p> Year: </p>
                        @Html.EditorFor(model => model.BirthDateYear, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BirthDateYear, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        
                        <input type="submit" value="Register" class="btn btn-default" />
                        @*   Html.ActionLink("MediArch", "Login", "Account")
                             onclick = "@("window.location.href = '"@Url.Action("Login", "Account") + "'");
                        *@
                        @* <input type="submit" value="Register" class="btn btn-default" onclick="@("window.location.href='" + @Url.Action("Login","Account") + "'");" /> *@
                        @*
                        <input type="submit" value="Register" class="btn btn-default"
                        @{
                            string helperLink = "onclick = " + '"' + "@(" + '"' + "window.location.href = '" + '"' + "@Url.Action(" + '"' + ", " + '"' + "Account" + '"' + ") + " + '"' + "'" + '"' + ");" + '"';
                            if (@Html.ValidationMessageFor(model => model.Password, "", new {@class = "text-danger"}).Equals("Formal not allowed."))
                            {
                                Console.Write(helperLink);
                            }
                        }
                        />*@
                    </div>
                </div>
            </form>
        </div>
       @* </center> *@
    }
    @*
        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    *@

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
